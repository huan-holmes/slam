max_obstacle_height: 1.0 # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.25 # 如果机器人是圆形，则指定机器人的半径
# map_type: voxel # 地图类型


# 障碍物层的参数配置
obstacle_layer:
  enabled: true #使能这个障碍物层
  max_obstacle_height: 2.0 # 考虑的最大障碍物高度
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  unknown_threshold: 15
  mark_threshold: 0
  combination_method: 1
  track_unknown_space: true # true 禁止全局路径规划穿越未知区域
  obstacle_range: 5.5 # 添加障碍物范围，一方面考虑激光范围，另外范围越大越耗计算资源
  raytrace_range: 6.0 # 清除障碍物范围
  publish_voxel_map: false
  observation_sources: ultrasonic scan # 数据源
  ultrasonic:
    data_type: PointCloud2
    topic: /robot_base/ultra_pcloud2 #ultra_pcloud2
    marking: true
    clearing: false
    min_obstacle_height: 0.0
    max_obstacle_height: 2.0
    oscillation_timeout: 0.0
    inf_is_valid: true
    observation_persistence: 0.0
  scan:
    data_type: LaserScan # scan数据类型
    topic: loc/scan # scan的话题名称
    marking: true # 是否根据scan添加障碍物
    clearing: true # 是否根据scan清除障碍物
    min_obstacle_height: 0.0 # scan检测到的最小有效障碍物高度
    max_obstacle_height: 2.0 # scan检测到的最大有效障碍物高度
    inf_is_valid: true # scan的无穷远数据是否有效


# 全局膨胀层参数配置
global_inflation_layer:
  enabled: true # 是否使能全局膨胀层；
  cost_scaling_factor: 5.0 # 膨胀层的指数衰减速度，值越小衰减越慢(default: 10)
  inflation_radius: 1.1 # 全局最大有效膨胀半径，即安装指数衰减扩张的最大半径，计算障碍物cos函数时使用

  
# 局部膨胀层参数配置
local_inflation_layer:
  enabled: true # 是否使能局部膨胀层
  cost_scaling_factor: 5.0 # 膨胀层的指数衰减速度，值越小衰减越慢(default: 10)
  inflation_radius: 0.2 # 局部最大有效膨胀半径，即安装指数衰减扩张的最大半径，计算障碍物cos函数时使用


# 静态层参数配置

static_layer:
  map_topic: map # 静态地图话题
  enabled: true # 是否使用静态层
