shutdown_costmaps: false # move_base空闲时shutdown_costmaps为true会关掉cost_map,激活是会重新开启

controller_frequency: 10.0 #10.0 # 向底盘控制移动话题cmd_vel发送命令的频率，也是局部路径规划的更新频率，规划一次就算一次速度
controller_patience: 5.0 #5.0 # 在空间清理操作执行前，控制器花多长时间等有效控制下发

planner_frequency: 5.0 #1.0 # 全局规划操作的执行频率
planner_patience: 7.0 #7.0 # 在空间清理操作执行前，留给规划器多长时间来找出一条有效规划

oscillation_timeout: 10.0 # 10 # 执行修复机制前，允许振荡的时间
oscillation_distance: 0.2 # 来回运动在多大距离以上不会被认为是振荡

# local planner - default is trajectory rollout
base_local_planner: "dwa_local_planner/DWAPlannerROS" # 指定用于move_base的局部规划器名称
#base_local_planner: "teb_local_planner/TebLocalPlannerROS"

base_global_planner: "navfn/NavfnROS" #指定用于move_base的全局规划器插件名称
#base_global_planner: "global_planner/GlobalPlanner" #alternatives: global_planner/GlobalPlanner, carrot_planner/CarrotPlanner
clearing_radius: 20.0

#We plan to integrate recovery behaviors for robot but currently those belong to gopher and still have to be adapted.
## recovery behaviors; we avoid spinning, but we need a fall-back replanning
#recovery_behavior_enabled: false

recovery_behaviors:
  name: 'super_conservative_reset1'
  type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'conservative_reset1'
  #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  name: 'aggressive_reset1'
  type: 'clear_costmap_recovery/ClearCostmapRecovery'
  name: 'clearing_rotation1'
  type: 'rotate_recovery/RotateRecovery'

super_conservative_reset1:
  reset_distance: 1.5

aggressive_reset1:
  reset_distance: 0.0
